plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

task generateTemplates {
	inputs.property "modid", project.mod_identifier

	def furnaces = ['copper', 'bronze', 'iron', 'steel']
	def utilities = ['sulfur', 'phosphorite', 'saltpeter', 'magnesium', 'bitumen', 'potash']
	def metals = ['silver', 'platinum', 'ignatius', 'shadow_iron', 'midasium', 'vyroxeres', 'ceruclase', 'kalendrite', 'vulcanite', 'sanguinite', 'prometheum', 'deep_iron', 'oureclase', 'astral_silver', 'carmot', 'mithril', 'orichalcum', 'adamantine', 'atlarus', 'eximite']
	def catalysts = ['tin', 'manganese', 'zinc', 'lemurite', 'lemurite', 'alduorite', 'infuscolium', 'rubracium', 'meutoite']
	def alloys = ['bronze', 'hepatizon', 'damascus_steel', 'angmallen', 'steel', 'brass', 'electrum', 'shadow_steel', 'inolashite', 'amordrine', 'black_steel', 'quicksilver', 'haderoth', 'celenegil', 'tartarite', 'desichalkos']

	def ores = metals + catalysts
	def items = metals + catalysts + alloys
	def tools = metals + alloys

	// ORE
	ores.each { metal_name ->
		copy {
			from "$projectDir/src/main/templates"
			include "**/*\${ore}*.json"
			into "$buildDir/resources/main/"
			expand "modid": project.mod_identifier, "ore": metal_name
			rename { String filename ->
				filename.replace("\${ore}", metal_name)
			}
		}
	}

	// METALS
	items.each { metal_name ->
		copy {
			from "$projectDir/src/main/templates"
			include "**/*\${metal}*.json"
			into "$buildDir/resources/main/"
			expand "modid": project.mod_identifier, "metal": metal_name
			rename { String filename ->
				filename.replace("\${metal}", metal_name)
			}
		}
	}

	// TOOLS:
	tools.each { metal_name ->
		copy {
			from "$projectDir/src/main/templates"
			include "**/*\${tool}*.json"
			into "$buildDir/resources/main/"
			expand "modid": project.mod_identifier, "tool": metal_name
			rename { String filename ->
				filename.replace("\${tool}", metal_name)
			}
		}
	}

	// UTILITY
	utilities.each { metal_name ->
		copy {
			from "$projectDir/src/main/templates"
			include "**/*\${utility}*.json"
			into "$buildDir/resources/main/"
			expand "modid": project.mod_identifier, "utility": metal_name
			rename { String filename ->
				filename.replace("\${utility}", metal_name)
			}
		}
	}

	// FURNACES
	furnaces.each { metal_name ->
		copy {
			from "$projectDir/src/main/templates"
			include "**/*\${furnace}*.json"
			into "$buildDir/resources/main/"
			expand "modid": project.mod_identifier, "furnace": metal_name
			rename { String filename ->
				filename.replace("\${furnace}", metal_name)
			}
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
